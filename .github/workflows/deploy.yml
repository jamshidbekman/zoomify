name: Deploy Zoomify Bot

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/zoomify:latest
            ${{ secrets.DOCKER_USERNAME }}/zoomify:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/zoomify:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/zoomify:buildcache,mode=max
      
      - name: Deploy to Ubuntu Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p ~/zoomify
            cd ~/zoomify

            # .env faylini yozamiz
            printf "%s" "${{ secrets.ENV_FILE }}" > .env

            # Eski konteynerlarni to'xtatamiz
            docker-compose down || true

            # Eng so'nggi imageni olib kelamiz
            docker pull ${{ secrets.DOCKER_USERNAME }}/zoomify:latest

            # docker-compose.yml ni yozamiz
            cat > docker-compose.yml << 'EOL'
            version: '3'

            services:
              app:
                image: ${{ secrets.DOCKER_USERNAME }}/zoomify:latest
                container_name: zoomify_app
                restart: always
                ports:
                  - '5000:5000'
                env_file:
                  - .env
                depends_on:
                  - zoomify_postgres
                  - zoomify_redis
                volumes:
                  - zoomify_sessions:/app/sessions
                networks:
                  - zoomify_network

              zoomify_postgres:
                image: postgres:16-alpine
                container_name: zoomify_postgres
                restart: always
                ports:
                  - '5433:5432'
                environment:
                  - POSTGRES_USER=${DB_USERNAME}
                  - POSTGRES_PASSWORD=${DB_PASSWORD}
                  - POSTGRES_DB=${DB_NAME}
                volumes:
                  - zoomify_postgres_data:/var/lib/postgresql/data
                networks:
                  - zoomify_network

              zoomify_redis:
                image: redis:7.2-alpine
                container_name: zoomify_redis
                restart: always
                ports:
                  - '6380:6379'
                command: redis-server --requirepass ${REDIS_PASSWORD}
                volumes:
                  - zoomify_redis_data:/data
                networks:
                  - zoomify_network

            volumes:
              zoomify_postgres_data:
              zoomify_redis_data:
              zoomify_sessions:

            networks:
              zoomify_network:
                driver: bridge
            EOL

            # Konteynerlarni ishga tushiramiz
            docker-compose up -d --force-recreate

            # Eski imagelarni tozalaymiz
            docker image prune -a -f --filter "until=24h"

            # Natijani tekshiramiz
            sleep 15
            echo "=== Container status ==="
            docker ps --filter "name=zoomify"
            echo "=== Application logs ==="
            docker-compose logs --tail=30 app